/*
 * generated by Xtext 2.16.0
 */
grammar InternalGuilang;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.mdsd.guilang.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.mdsd.guilang.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.mdsd.guilang.services.GuilangGrammarAccess;

}
@parser::members {
	private GuilangGrammarAccess grammarAccess;

	public void setGrammarAccess(GuilangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleGUI
entryRuleGUI
:
{ before(grammarAccess.getGUIRule()); }
	 ruleGUI
{ after(grammarAccess.getGUIRule()); } 
	 EOF 
;

// Rule GUI
ruleGUI 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGUIAccess().getMainAssignment()); }
		(rule__GUI__MainAssignment)
		{ after(grammarAccess.getGUIAccess().getMainAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMain
entryRuleMain
:
{ before(grammarAccess.getMainRule()); }
	 ruleMain
{ after(grammarAccess.getMainRule()); } 
	 EOF 
;

// Rule Main
ruleMain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainAccess().getGroup()); }
		(rule__Main__Group__0)
		{ after(grammarAccess.getMainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnit
entryRuleUnit
:
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;

// Rule Unit
ruleUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitAccess().getGroup()); }
		(rule__Unit__Group__0)
		{ after(grammarAccess.getUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getAlternatives()); }
		(rule__Entity__Alternatives)
		{ after(grammarAccess.getEntityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayout
entryRuleLayout
:
{ before(grammarAccess.getLayoutRule()); }
	 ruleLayout
{ after(grammarAccess.getLayoutRule()); } 
	 EOF 
;

// Rule Layout
ruleLayout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayoutAccess().getGroup()); }
		(rule__Layout__Group__0)
		{ after(grammarAccess.getLayoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayoutType
entryRuleLayoutType
:
{ before(grammarAccess.getLayoutTypeRule()); }
	 ruleLayoutType
{ after(grammarAccess.getLayoutTypeRule()); } 
	 EOF 
;

// Rule LayoutType
ruleLayoutType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayoutTypeAccess().getAlternatives()); }
		(rule__LayoutType__Alternatives)
		{ after(grammarAccess.getLayoutTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVertical
entryRuleVertical
:
{ before(grammarAccess.getVerticalRule()); }
	 ruleVertical
{ after(grammarAccess.getVerticalRule()); } 
	 EOF 
;

// Rule Vertical
ruleVertical 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerticalAccess().getGroup()); }
		(rule__Vertical__Group__0)
		{ after(grammarAccess.getVerticalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHorizontal
entryRuleHorizontal
:
{ before(grammarAccess.getHorizontalRule()); }
	 ruleHorizontal
{ after(grammarAccess.getHorizontalRule()); } 
	 EOF 
;

// Rule Horizontal
ruleHorizontal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHorizontalAccess().getGroup()); }
		(rule__Horizontal__Group__0)
		{ after(grammarAccess.getHorizontalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getGroup()); }
		(rule__Label__Group__0)
		{ after(grammarAccess.getLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButton
entryRuleButton
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonAccess().getGroup()); }
		(rule__Button__Group__0)
		{ after(grammarAccess.getButtonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckbox
entryRuleCheckbox
:
{ before(grammarAccess.getCheckboxRule()); }
	 ruleCheckbox
{ after(grammarAccess.getCheckboxRule()); } 
	 EOF 
;

// Rule Checkbox
ruleCheckbox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckboxAccess().getGroup()); }
		(rule__Checkbox__Group__0)
		{ after(grammarAccess.getCheckboxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecifications
entryRuleSpecifications
:
{ before(grammarAccess.getSpecificationsRule()); }
	 ruleSpecifications
{ after(grammarAccess.getSpecificationsRule()); } 
	 EOF 
;

// Rule Specifications
ruleSpecifications 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecificationsAccess().getGroup()); }
		(rule__Specifications__Group__0)
		{ after(grammarAccess.getSpecificationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecification
entryRuleSpecification
:
{ before(grammarAccess.getSpecificationRule()); }
	 ruleSpecification
{ after(grammarAccess.getSpecificationRule()); } 
	 EOF 
;

// Rule Specification
ruleSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecificationAccess().getTypeAssignment()); }
		(rule__Specification__TypeAssignment)
		{ after(grammarAccess.getSpecificationAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayoutSpec
entryRuleLayoutSpec
:
{ before(grammarAccess.getLayoutSpecRule()); }
	 ruleLayoutSpec
{ after(grammarAccess.getLayoutSpecRule()); } 
	 EOF 
;

// Rule LayoutSpec
ruleLayoutSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayoutSpecAccess().getGroup()); }
		(rule__LayoutSpec__Group__0)
		{ after(grammarAccess.getLayoutSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerticalSpec
entryRuleVerticalSpec
:
{ before(grammarAccess.getVerticalSpecRule()); }
	 ruleVerticalSpec
{ after(grammarAccess.getVerticalSpecRule()); } 
	 EOF 
;

// Rule VerticalSpec
ruleVerticalSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerticalSpecAccess().getGroup()); }
		(rule__VerticalSpec__Group__0)
		{ after(grammarAccess.getVerticalSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHorizontalSpec
entryRuleHorizontalSpec
:
{ before(grammarAccess.getHorizontalSpecRule()); }
	 ruleHorizontalSpec
{ after(grammarAccess.getHorizontalSpecRule()); } 
	 EOF 
;

// Rule HorizontalSpec
ruleHorizontalSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHorizontalSpecAccess().getGroup()); }
		(rule__HorizontalSpec__Group__0)
		{ after(grammarAccess.getHorizontalSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabelSpec
entryRuleLabelSpec
:
{ before(grammarAccess.getLabelSpecRule()); }
	 ruleLabelSpec
{ after(grammarAccess.getLabelSpecRule()); } 
	 EOF 
;

// Rule LabelSpec
ruleLabelSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelSpecAccess().getGroup()); }
		(rule__LabelSpec__Group__0)
		{ after(grammarAccess.getLabelSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButtonSpec
entryRuleButtonSpec
:
{ before(grammarAccess.getButtonSpecRule()); }
	 ruleButtonSpec
{ after(grammarAccess.getButtonSpecRule()); } 
	 EOF 
;

// Rule ButtonSpec
ruleButtonSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonSpecAccess().getGroup()); }
		(rule__ButtonSpec__Group__0)
		{ after(grammarAccess.getButtonSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButtonSpecOptions
entryRuleButtonSpecOptions
:
{ before(grammarAccess.getButtonSpecOptionsRule()); }
	 ruleButtonSpecOptions
{ after(grammarAccess.getButtonSpecOptionsRule()); } 
	 EOF 
;

// Rule ButtonSpecOptions
ruleButtonSpecOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonSpecOptionsAccess().getRequireElementsParserRuleCall()); }
		ruleRequireElements
		{ after(grammarAccess.getButtonSpecOptionsAccess().getRequireElementsParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputSpec
entryRuleInputSpec
:
{ before(grammarAccess.getInputSpecRule()); }
	 ruleInputSpec
{ after(grammarAccess.getInputSpecRule()); } 
	 EOF 
;

// Rule InputSpec
ruleInputSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputSpecAccess().getGroup()); }
		(rule__InputSpec__Group__0)
		{ after(grammarAccess.getInputSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputSpecOptions
entryRuleInputSpecOptions
:
{ before(grammarAccess.getInputSpecOptionsRule()); }
	 ruleInputSpecOptions
{ after(grammarAccess.getInputSpecOptionsRule()); } 
	 EOF 
;

// Rule InputSpecOptions
ruleInputSpecOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputSpecOptionsAccess().getAlternatives()); }
		(rule__InputSpecOptions__Alternatives)
		{ after(grammarAccess.getInputSpecOptionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckboxSpec
entryRuleCheckboxSpec
:
{ before(grammarAccess.getCheckboxSpecRule()); }
	 ruleCheckboxSpec
{ after(grammarAccess.getCheckboxSpecRule()); } 
	 EOF 
;

// Rule CheckboxSpec
ruleCheckboxSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckboxSpecAccess().getGroup()); }
		(rule__CheckboxSpec__Group__0)
		{ after(grammarAccess.getCheckboxSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextValidate
entryRuleTextValidate
:
{ before(grammarAccess.getTextValidateRule()); }
	 ruleTextValidate
{ after(grammarAccess.getTextValidateRule()); } 
	 EOF 
;

// Rule TextValidate
ruleTextValidate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextValidateAccess().getGroup()); }
		(rule__TextValidate__Group__0)
		{ after(grammarAccess.getTextValidateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegexValidate
entryRuleRegexValidate
:
{ before(grammarAccess.getRegexValidateRule()); }
	 ruleRegexValidate
{ after(grammarAccess.getRegexValidateRule()); } 
	 EOF 
;

// Rule RegexValidate
ruleRegexValidate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegexValidateAccess().getGroup()); }
		(rule__RegexValidate__Group__0)
		{ after(grammarAccess.getRegexValidateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegexVariableRef
entryRuleRegexVariableRef
:
{ before(grammarAccess.getRegexVariableRefRule()); }
	 ruleRegexVariableRef
{ after(grammarAccess.getRegexVariableRefRule()); } 
	 EOF 
;

// Rule RegexVariableRef
ruleRegexVariableRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegexVariableRefAccess().getRefAssignment()); }
		(rule__RegexVariableRef__RefAssignment)
		{ after(grammarAccess.getRegexVariableRefAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePresetTextValidate
entryRulePresetTextValidate
:
{ before(grammarAccess.getPresetTextValidateRule()); }
	 rulePresetTextValidate
{ after(grammarAccess.getPresetTextValidateRule()); } 
	 EOF 
;

// Rule PresetTextValidate
rulePresetTextValidate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPresetTextValidateAccess().getAlternatives()); }
		(rule__PresetTextValidate__Alternatives)
		{ after(grammarAccess.getPresetTextValidateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckboxValidate
entryRuleCheckboxValidate
:
{ before(grammarAccess.getCheckboxValidateRule()); }
	 ruleCheckboxValidate
{ after(grammarAccess.getCheckboxValidateRule()); } 
	 EOF 
;

// Rule CheckboxValidate
ruleCheckboxValidate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckboxValidateAccess().getValueAssignment()); }
		(rule__CheckboxValidate__ValueAssignment)
		{ after(grammarAccess.getCheckboxValidateAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequireElements
entryRuleRequireElements
:
{ before(grammarAccess.getRequireElementsRule()); }
	 ruleRequireElements
{ after(grammarAccess.getRequireElementsRule()); } 
	 EOF 
;

// Rule RequireElements
ruleRequireElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequireElementsAccess().getGroup()); }
		(rule__RequireElements__Group__0)
		{ after(grammarAccess.getRequireElementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequire
entryRuleRequire
:
{ before(grammarAccess.getRequireRule()); }
	 ruleRequire
{ after(grammarAccess.getRequireRule()); } 
	 EOF 
;

// Rule Require
ruleRequire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequireAccess().getRequireOrParserRuleCall()); }
		ruleRequireOr
		{ after(grammarAccess.getRequireAccess().getRequireOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequireOr
entryRuleRequireOr
:
{ before(grammarAccess.getRequireOrRule()); }
	 ruleRequireOr
{ after(grammarAccess.getRequireOrRule()); } 
	 EOF 
;

// Rule RequireOr
ruleRequireOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequireOrAccess().getGroup()); }
		(rule__RequireOr__Group__0)
		{ after(grammarAccess.getRequireOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequireAnd
entryRuleRequireAnd
:
{ before(grammarAccess.getRequireAndRule()); }
	 ruleRequireAnd
{ after(grammarAccess.getRequireAndRule()); } 
	 EOF 
;

// Rule RequireAnd
ruleRequireAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequireAndAccess().getGroup()); }
		(rule__RequireAnd__Group__0)
		{ after(grammarAccess.getRequireAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequireBase
entryRuleRequireBase
:
{ before(grammarAccess.getRequireBaseRule()); }
	 ruleRequireBase
{ after(grammarAccess.getRequireBaseRule()); } 
	 EOF 
;

// Rule RequireBase
ruleRequireBase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequireBaseAccess().getAlternatives()); }
		(rule__RequireBase__Alternatives)
		{ after(grammarAccess.getRequireBaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getLayoutTypeParserRuleCall_0()); }
		ruleLayoutType
		{ after(grammarAccess.getEntityAccess().getLayoutTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getElementParserRuleCall_1()); }
		ruleElement
		{ after(grammarAccess.getEntityAccess().getElementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutTypeAccess().getLayoutParserRuleCall_0()); }
		ruleLayout
		{ after(grammarAccess.getLayoutTypeAccess().getLayoutParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutTypeAccess().getVerticalParserRuleCall_1()); }
		ruleVertical
		{ after(grammarAccess.getLayoutTypeAccess().getVerticalParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutTypeAccess().getHorizontalParserRuleCall_2()); }
		ruleHorizontal
		{ after(grammarAccess.getLayoutTypeAccess().getHorizontalParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerticalAccess().getVerticalKeyword_1_0()); }
		'vertical'
		{ after(grammarAccess.getVerticalAccess().getVerticalKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerticalAccess().getVertKeyword_1_1()); }
		'vert'
		{ after(grammarAccess.getVerticalAccess().getVertKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHorizontalAccess().getHorizontalKeyword_1_0()); }
		'horizontal'
		{ after(grammarAccess.getHorizontalAccess().getHorizontalKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getHorizontalAccess().getHoriKeyword_1_1()); }
		'hori'
		{ after(grammarAccess.getHorizontalAccess().getHoriKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getLabelParserRuleCall_0()); }
		ruleLabel
		{ after(grammarAccess.getElementAccess().getLabelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getButtonParserRuleCall_1()); }
		ruleButton
		{ after(grammarAccess.getElementAccess().getButtonParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getInputParserRuleCall_2()); }
		ruleInput
		{ after(grammarAccess.getElementAccess().getInputParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getCheckboxParserRuleCall_3()); }
		ruleCheckbox
		{ after(grammarAccess.getElementAccess().getCheckboxParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getTypeLayoutSpecParserRuleCall_0_0()); }
		ruleLayoutSpec
		{ after(grammarAccess.getSpecificationAccess().getTypeLayoutSpecParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecificationAccess().getTypeVerticalSpecParserRuleCall_0_1()); }
		ruleVerticalSpec
		{ after(grammarAccess.getSpecificationAccess().getTypeVerticalSpecParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSpecificationAccess().getTypeHorizontalSpecParserRuleCall_0_2()); }
		ruleHorizontalSpec
		{ after(grammarAccess.getSpecificationAccess().getTypeHorizontalSpecParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSpecificationAccess().getTypeLabelSpecParserRuleCall_0_3()); }
		ruleLabelSpec
		{ after(grammarAccess.getSpecificationAccess().getTypeLabelSpecParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getSpecificationAccess().getTypeButtonSpecParserRuleCall_0_4()); }
		ruleButtonSpec
		{ after(grammarAccess.getSpecificationAccess().getTypeButtonSpecParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getSpecificationAccess().getTypeInputSpecParserRuleCall_0_5()); }
		ruleInputSpec
		{ after(grammarAccess.getSpecificationAccess().getTypeInputSpecParserRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getSpecificationAccess().getTypeCheckboxSpecParserRuleCall_0_6()); }
		ruleCheckboxSpec
		{ after(grammarAccess.getSpecificationAccess().getTypeCheckboxSpecParserRuleCall_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpecOptions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputSpecOptionsAccess().getTextValidateParserRuleCall_0()); }
		ruleTextValidate
		{ after(grammarAccess.getInputSpecOptionsAccess().getTextValidateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputSpecOptionsAccess().getRequireElementsParserRuleCall_1()); }
		ruleRequireElements
		{ after(grammarAccess.getInputSpecOptionsAccess().getRequireElementsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextValidate__ValidationAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextValidateAccess().getValidationRegexValidateParserRuleCall_1_0_0()); }
		ruleRegexValidate
		{ after(grammarAccess.getTextValidateAccess().getValidationRegexValidateParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextValidateAccess().getValidationRegexVariableRefParserRuleCall_1_0_1()); }
		ruleRegexVariableRef
		{ after(grammarAccess.getTextValidateAccess().getValidationRegexVariableRefParserRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTextValidateAccess().getValidationPresetTextValidateParserRuleCall_1_0_2()); }
		rulePresetTextValidate
		{ after(grammarAccess.getTextValidateAccess().getValidationPresetTextValidateParserRuleCall_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PresetTextValidate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPresetTextValidateAccess().getValueAssignment_0()); }
		(rule__PresetTextValidate__ValueAssignment_0)
		{ after(grammarAccess.getPresetTextValidateAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPresetTextValidateAccess().getValueAssignment_1()); }
		(rule__PresetTextValidate__ValueAssignment_1)
		{ after(grammarAccess.getPresetTextValidateAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxValidate__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxValidateAccess().getValueIsCheckedKeyword_0_0()); }
		'is-checked'
		{ after(grammarAccess.getCheckboxValidateAccess().getValueIsCheckedKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCheckboxValidateAccess().getValueIsUncheckedKeyword_0_1()); }
		'is-unchecked'
		{ after(grammarAccess.getCheckboxValidateAccess().getValueIsUncheckedKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireBaseAccess().getGroup_0()); }
		(rule__RequireBase__Group_0__0)
		{ after(grammarAccess.getRequireBaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRequireBaseAccess().getGroup_1()); }
		(rule__RequireBase__Group_1__0)
		{ after(grammarAccess.getRequireBaseAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getRequireBaseAccess().getGroup_2()); }
		(rule__RequireBase__Group_2__0)
		{ after(grammarAccess.getRequireBaseAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireBaseAccess().getExclamationMarkKeyword_1_1_0()); }
		'!'
		{ after(grammarAccess.getRequireBaseAccess().getExclamationMarkKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRequireBaseAccess().getNOTKeyword_1_1_1()); }
		'NOT'
		{ after(grammarAccess.getRequireBaseAccess().getNOTKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Main__Group__0__Impl
	rule__Main__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainAccess().getMainKeyword_0()); }
	'main'
	{ after(grammarAccess.getMainAccess().getMainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Main__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainAccess().getUnitParserRuleCall_1()); }
	ruleUnit
	{ after(grammarAccess.getMainAccess().getUnitParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group__0__Impl
	rule__Unit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getOPENTerminalRuleCall_0()); }
	RULE_OPEN
	{ after(grammarAccess.getUnitAccess().getOPENTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group__1__Impl
	rule__Unit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getLayoutAssignment_1()); }
	(rule__Unit__LayoutAssignment_1)
	{ after(grammarAccess.getUnitAccess().getLayoutAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group__2__Impl
	rule__Unit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getSpecificationsAssignment_2()); }
	(rule__Unit__SpecificationsAssignment_2)?
	{ after(grammarAccess.getUnitAccess().getSpecificationsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getCLOSETerminalRuleCall_3()); }
	RULE_CLOSE
	{ after(grammarAccess.getUnitAccess().getCLOSETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__0__Impl
	rule__Layout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getLayoutAction_0()); }
	()
	{ after(grammarAccess.getLayoutAccess().getLayoutAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__1__Impl
	rule__Layout__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getLayoutKeyword_1()); }
	'layout'
	{ after(grammarAccess.getLayoutAccess().getLayoutKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__2__Impl
	rule__Layout__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getNameAssignment_2()); }
	(rule__Layout__NameAssignment_2)?
	{ after(grammarAccess.getLayoutAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__3__Impl
	rule__Layout__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getOPENTerminalRuleCall_3()); }
	RULE_OPEN
	{ after(grammarAccess.getLayoutAccess().getOPENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__4__Impl
	rule__Layout__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getEntitiesAssignment_4()); }
	(rule__Layout__EntitiesAssignment_4)*
	{ after(grammarAccess.getLayoutAccess().getEntitiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getCLOSETerminalRuleCall_5()); }
	RULE_CLOSE
	{ after(grammarAccess.getLayoutAccess().getCLOSETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vertical__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vertical__Group__0__Impl
	rule__Vertical__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerticalAccess().getVerticalAction_0()); }
	()
	{ after(grammarAccess.getVerticalAccess().getVerticalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vertical__Group__1__Impl
	rule__Vertical__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerticalAccess().getAlternatives_1()); }
	(rule__Vertical__Alternatives_1)
	{ after(grammarAccess.getVerticalAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vertical__Group__2__Impl
	rule__Vertical__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerticalAccess().getNameAssignment_2()); }
	(rule__Vertical__NameAssignment_2)?
	{ after(grammarAccess.getVerticalAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vertical__Group__3__Impl
	rule__Vertical__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerticalAccess().getOPENTerminalRuleCall_3()); }
	RULE_OPEN
	{ after(grammarAccess.getVerticalAccess().getOPENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vertical__Group__4__Impl
	rule__Vertical__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerticalAccess().getEntitiesAssignment_4()); }
	(rule__Vertical__EntitiesAssignment_4)*
	{ after(grammarAccess.getVerticalAccess().getEntitiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vertical__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerticalAccess().getCLOSETerminalRuleCall_5()); }
	RULE_CLOSE
	{ after(grammarAccess.getVerticalAccess().getCLOSETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Horizontal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Horizontal__Group__0__Impl
	rule__Horizontal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalAccess().getHorizontalAction_0()); }
	()
	{ after(grammarAccess.getHorizontalAccess().getHorizontalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Horizontal__Group__1__Impl
	rule__Horizontal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalAccess().getAlternatives_1()); }
	(rule__Horizontal__Alternatives_1)
	{ after(grammarAccess.getHorizontalAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Horizontal__Group__2__Impl
	rule__Horizontal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalAccess().getNameAssignment_2()); }
	(rule__Horizontal__NameAssignment_2)?
	{ after(grammarAccess.getHorizontalAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Horizontal__Group__3__Impl
	rule__Horizontal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalAccess().getOPENTerminalRuleCall_3()); }
	RULE_OPEN
	{ after(grammarAccess.getHorizontalAccess().getOPENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Horizontal__Group__4__Impl
	rule__Horizontal__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalAccess().getEntitiesAssignment_4()); }
	(rule__Horizontal__EntitiesAssignment_4)*
	{ after(grammarAccess.getHorizontalAccess().getEntitiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Horizontal__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalAccess().getCLOSETerminalRuleCall_5()); }
	RULE_CLOSE
	{ after(grammarAccess.getHorizontalAccess().getCLOSETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getLabelAction_0()); }
	()
	{ after(grammarAccess.getLabelAccess().getLabelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__1__Impl
	rule__Label__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getLABEL_TYPETerminalRuleCall_1()); }
	RULE_LABEL_TYPE
	{ after(grammarAccess.getLabelAccess().getLABEL_TYPETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getNameAssignment_2()); }
	(rule__Label__NameAssignment_2)?
	{ after(grammarAccess.getLabelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonAction_0()); }
	()
	{ after(grammarAccess.getButtonAccess().getButtonAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__1__Impl
	rule__Button__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getBUTTON_TYPETerminalRuleCall_1()); }
	RULE_BUTTON_TYPE
	{ after(grammarAccess.getButtonAccess().getBUTTON_TYPETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getNameAssignment_2()); }
	(rule__Button__NameAssignment_2)?
	{ after(grammarAccess.getButtonAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getInputAction_0()); }
	()
	{ after(grammarAccess.getInputAccess().getInputAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
	rule__Input__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getINPUT_TYPETerminalRuleCall_1()); }
	RULE_INPUT_TYPE
	{ after(grammarAccess.getInputAccess().getINPUT_TYPETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getNameAssignment_2()); }
	(rule__Input__NameAssignment_2)?
	{ after(grammarAccess.getInputAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Checkbox__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__0__Impl
	rule__Checkbox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getCheckboxAction_0()); }
	()
	{ after(grammarAccess.getCheckboxAccess().getCheckboxAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__1__Impl
	rule__Checkbox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getCHECKBOX_TYPETerminalRuleCall_1()); }
	RULE_CHECKBOX_TYPE
	{ after(grammarAccess.getCheckboxAccess().getCHECKBOX_TYPETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getNameAssignment_2()); }
	(rule__Checkbox__NameAssignment_2)?
	{ after(grammarAccess.getCheckboxAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Specifications__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifications__Group__0__Impl
	rule__Specifications__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifications__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationsAccess().getSpecificationsAction_0()); }
	()
	{ after(grammarAccess.getSpecificationsAccess().getSpecificationsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifications__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifications__Group__1__Impl
	rule__Specifications__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifications__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationsAccess().getElementsKeyword_1()); }
	'elements'
	{ after(grammarAccess.getSpecificationsAccess().getElementsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifications__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifications__Group__2__Impl
	rule__Specifications__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifications__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationsAccess().getOPENTerminalRuleCall_2()); }
	RULE_OPEN
	{ after(grammarAccess.getSpecificationsAccess().getOPENTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifications__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifications__Group__3__Impl
	rule__Specifications__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifications__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationsAccess().getSpecificationsAssignment_3()); }
	(rule__Specifications__SpecificationsAssignment_3)*
	{ after(grammarAccess.getSpecificationsAccess().getSpecificationsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifications__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifications__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifications__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationsAccess().getCLOSETerminalRuleCall_4()); }
	RULE_CLOSE
	{ after(grammarAccess.getSpecificationsAccess().getCLOSETerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LayoutSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayoutSpec__Group__0__Impl
	rule__LayoutSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutSpecAccess().getRefAssignment_0()); }
	(rule__LayoutSpec__RefAssignment_0)
	{ after(grammarAccess.getLayoutSpecAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayoutSpec__Group__1__Impl
	rule__LayoutSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutSpecAccess().getOPENTerminalRuleCall_1()); }
	RULE_OPEN
	{ after(grammarAccess.getLayoutSpecAccess().getOPENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayoutSpec__Group__2__Impl
	rule__LayoutSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutSpecAccess().getLayoutSpecKeyword_2()); }
	'layout-spec'
	{ after(grammarAccess.getLayoutSpecAccess().getLayoutSpecKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayoutSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutSpecAccess().getCLOSETerminalRuleCall_3()); }
	RULE_CLOSE
	{ after(grammarAccess.getLayoutSpecAccess().getCLOSETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VerticalSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerticalSpec__Group__0__Impl
	rule__VerticalSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerticalSpecAccess().getRefAssignment_0()); }
	(rule__VerticalSpec__RefAssignment_0)
	{ after(grammarAccess.getVerticalSpecAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerticalSpec__Group__1__Impl
	rule__VerticalSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerticalSpecAccess().getOPENTerminalRuleCall_1()); }
	RULE_OPEN
	{ after(grammarAccess.getVerticalSpecAccess().getOPENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerticalSpec__Group__2__Impl
	rule__VerticalSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerticalSpecAccess().getVerticalSpecKeyword_2()); }
	'vertical-spec'
	{ after(grammarAccess.getVerticalSpecAccess().getVerticalSpecKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerticalSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerticalSpecAccess().getCLOSETerminalRuleCall_3()); }
	RULE_CLOSE
	{ after(grammarAccess.getVerticalSpecAccess().getCLOSETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HorizontalSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSpec__Group__0__Impl
	rule__HorizontalSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSpecAccess().getRefAssignment_0()); }
	(rule__HorizontalSpec__RefAssignment_0)
	{ after(grammarAccess.getHorizontalSpecAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSpec__Group__1__Impl
	rule__HorizontalSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSpecAccess().getOPENTerminalRuleCall_1()); }
	RULE_OPEN
	{ after(grammarAccess.getHorizontalSpecAccess().getOPENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSpec__Group__2__Impl
	rule__HorizontalSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSpecAccess().getHorizontalSpecKeyword_2()); }
	'horizontal-spec'
	{ after(grammarAccess.getHorizontalSpecAccess().getHorizontalSpecKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSpecAccess().getCLOSETerminalRuleCall_3()); }
	RULE_CLOSE
	{ after(grammarAccess.getHorizontalSpecAccess().getCLOSETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabelSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelSpec__Group__0__Impl
	rule__LabelSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelSpecAccess().getRefAssignment_0()); }
	(rule__LabelSpec__RefAssignment_0)
	{ after(grammarAccess.getLabelSpecAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelSpec__Group__1__Impl
	rule__LabelSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelSpecAccess().getOPENTerminalRuleCall_1()); }
	RULE_OPEN
	{ after(grammarAccess.getLabelSpecAccess().getOPENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelSpec__Group__2__Impl
	rule__LabelSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelSpecAccess().getLabelSpecKeyword_2()); }
	'label-spec'
	{ after(grammarAccess.getLabelSpecAccess().getLabelSpecKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelSpecAccess().getCLOSETerminalRuleCall_3()); }
	RULE_CLOSE
	{ after(grammarAccess.getLabelSpecAccess().getCLOSETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ButtonSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ButtonSpec__Group__0__Impl
	rule__ButtonSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonSpecAccess().getRefAssignment_0()); }
	(rule__ButtonSpec__RefAssignment_0)
	{ after(grammarAccess.getButtonSpecAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ButtonSpec__Group__1__Impl
	rule__ButtonSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonSpecAccess().getOPENTerminalRuleCall_1()); }
	RULE_OPEN
	{ after(grammarAccess.getButtonSpecAccess().getOPENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ButtonSpec__Group__2__Impl
	rule__ButtonSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonSpecAccess().getButtonSpecKeyword_2()); }
	'button-spec'
	{ after(grammarAccess.getButtonSpecAccess().getButtonSpecKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ButtonSpec__Group__3__Impl
	rule__ButtonSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonSpecAccess().getOptionsAssignment_3()); }
	(rule__ButtonSpec__OptionsAssignment_3)*
	{ after(grammarAccess.getButtonSpecAccess().getOptionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ButtonSpec__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonSpecAccess().getCLOSETerminalRuleCall_4()); }
	RULE_CLOSE
	{ after(grammarAccess.getButtonSpecAccess().getCLOSETerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputSpec__Group__0__Impl
	rule__InputSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputSpecAccess().getRefAssignment_0()); }
	(rule__InputSpec__RefAssignment_0)
	{ after(grammarAccess.getInputSpecAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputSpec__Group__1__Impl
	rule__InputSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputSpecAccess().getOPENTerminalRuleCall_1()); }
	RULE_OPEN
	{ after(grammarAccess.getInputSpecAccess().getOPENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputSpec__Group__2__Impl
	rule__InputSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputSpecAccess().getInputSpecKeyword_2()); }
	'input-spec'
	{ after(grammarAccess.getInputSpecAccess().getInputSpecKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputSpec__Group__3__Impl
	rule__InputSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputSpecAccess().getOptionsAssignment_3()); }
	(rule__InputSpec__OptionsAssignment_3)*
	{ after(grammarAccess.getInputSpecAccess().getOptionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputSpec__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputSpecAccess().getCLOSETerminalRuleCall_4()); }
	RULE_CLOSE
	{ after(grammarAccess.getInputSpecAccess().getCLOSETerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckboxSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxSpec__Group__0__Impl
	rule__CheckboxSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxSpecAccess().getRefAssignment_0()); }
	(rule__CheckboxSpec__RefAssignment_0)
	{ after(grammarAccess.getCheckboxSpecAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxSpec__Group__1__Impl
	rule__CheckboxSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxSpecAccess().getOPENTerminalRuleCall_1()); }
	RULE_OPEN
	{ after(grammarAccess.getCheckboxSpecAccess().getOPENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxSpec__Group__2__Impl
	rule__CheckboxSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxSpecAccess().getCheckboxSpecKeyword_2()); }
	'checkbox-spec'
	{ after(grammarAccess.getCheckboxSpecAccess().getCheckboxSpecKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxSpecAccess().getCLOSETerminalRuleCall_3()); }
	RULE_CLOSE
	{ after(grammarAccess.getCheckboxSpecAccess().getCLOSETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextValidate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextValidate__Group__0__Impl
	rule__TextValidate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextValidate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextValidateAccess().getValidateKeyword_0()); }
	'validate'
	{ after(grammarAccess.getTextValidateAccess().getValidateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextValidate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextValidate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextValidate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextValidateAccess().getValidationAssignment_1()); }
	(rule__TextValidate__ValidationAssignment_1)
	{ after(grammarAccess.getTextValidateAccess().getValidationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegexValidate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegexValidate__Group__0__Impl
	rule__RegexValidate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegexValidate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegexValidateAccess().getRegexKeyword_0()); }
	'regex'
	{ after(grammarAccess.getRegexValidateAccess().getRegexKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegexValidate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegexValidate__Group__1__Impl
	rule__RegexValidate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegexValidate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegexValidateAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getRegexValidateAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegexValidate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegexValidate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegexValidate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegexValidateAccess().getValueAssignment_2()); }
	(rule__RegexValidate__ValueAssignment_2)
	{ after(grammarAccess.getRegexValidateAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequireElements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireElements__Group__0__Impl
	rule__RequireElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireElements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireElementsAccess().getRequireKeyword_0()); }
	'require'
	{ after(grammarAccess.getRequireElementsAccess().getRequireKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireElements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireElements__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireElements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireElementsAccess().getElementsAssignment_1()); }
	(rule__RequireElements__ElementsAssignment_1)
	{ after(grammarAccess.getRequireElementsAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequireOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireOr__Group__0__Impl
	rule__RequireOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireOrAccess().getRequireAndParserRuleCall_0()); }
	ruleRequireAnd
	{ after(grammarAccess.getRequireOrAccess().getRequireAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireOrAccess().getGroup_1()); }
	(rule__RequireOr__Group_1__0)*
	{ after(grammarAccess.getRequireOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequireOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireOr__Group_1__0__Impl
	rule__RequireOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRequireOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireOr__Group_1__1__Impl
	rule__RequireOr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getRequireOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireOr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireOr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireOr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireOrAccess().getRightAssignment_1_2()); }
	(rule__RequireOr__RightAssignment_1_2)
	{ after(grammarAccess.getRequireOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequireAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireAnd__Group__0__Impl
	rule__RequireAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAndAccess().getRequireBaseParserRuleCall_0()); }
	ruleRequireBase
	{ after(grammarAccess.getRequireAndAccess().getRequireBaseParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAndAccess().getGroup_1()); }
	(rule__RequireAnd__Group_1__0)*
	{ after(grammarAccess.getRequireAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequireAnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireAnd__Group_1__0__Impl
	rule__RequireAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireAnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRequireAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireAnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireAnd__Group_1__1__Impl
	rule__RequireAnd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireAnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAndAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getRequireAndAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireAnd__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireAnd__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireAnd__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAndAccess().getRightAssignment_1_2()); }
	(rule__RequireAnd__RightAssignment_1_2)
	{ after(grammarAccess.getRequireAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequireBase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireBase__Group_0__0__Impl
	rule__RequireBase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireBaseAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getRequireBaseAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireBase__Group_0__1__Impl
	rule__RequireBase__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireBaseAccess().getExpAssignment_0_1()); }
	(rule__RequireBase__ExpAssignment_0_1)
	{ after(grammarAccess.getRequireBaseAccess().getExpAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireBase__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireBaseAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getRequireBaseAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequireBase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireBase__Group_1__0__Impl
	rule__RequireBase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireBaseAccess().getNotAction_1_0()); }
	()
	{ after(grammarAccess.getRequireBaseAccess().getNotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireBase__Group_1__1__Impl
	rule__RequireBase__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireBaseAccess().getAlternatives_1_1()); }
	(rule__RequireBase__Alternatives_1_1)
	{ after(grammarAccess.getRequireBaseAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireBase__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireBaseAccess().getExpAssignment_1_2()); }
	(rule__RequireBase__ExpAssignment_1_2)
	{ after(grammarAccess.getRequireBaseAccess().getExpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequireBase__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireBase__Group_2__0__Impl
	rule__RequireBase__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireBaseAccess().getElementRefAction_2_0()); }
	()
	{ after(grammarAccess.getRequireBaseAccess().getElementRefAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireBase__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireBaseAccess().getRefAssignment_2_1()); }
	(rule__RequireBase__RefAssignment_2_1)
	{ after(grammarAccess.getRequireBaseAccess().getRefAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GUI__MainAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGUIAccess().getMainMainParserRuleCall_0()); }
		ruleMain
		{ after(grammarAccess.getGUIAccess().getMainMainParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__LayoutAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getLayoutLayoutParserRuleCall_1_0()); }
		ruleLayout
		{ after(grammarAccess.getUnitAccess().getLayoutLayoutParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__SpecificationsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getSpecificationsSpecificationsParserRuleCall_2_0()); }
		ruleSpecifications
		{ after(grammarAccess.getUnitAccess().getSpecificationsSpecificationsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getLayoutAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__EntitiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getEntitiesEntityParserRuleCall_4_0()); }
		ruleEntity
		{ after(grammarAccess.getLayoutAccess().getEntitiesEntityParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerticalAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVerticalAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vertical__EntitiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerticalAccess().getEntitiesEntityParserRuleCall_4_0()); }
		ruleEntity
		{ after(grammarAccess.getVerticalAccess().getEntitiesEntityParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHorizontalAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getHorizontalAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Horizontal__EntitiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHorizontalAccess().getEntitiesEntityParserRuleCall_4_0()); }
		ruleEntity
		{ after(grammarAccess.getHorizontalAccess().getEntitiesEntityParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getInputAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCheckboxAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifications__SpecificationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationsAccess().getSpecificationsSpecificationParserRuleCall_3_0()); }
		ruleSpecification
		{ after(grammarAccess.getSpecificationsAccess().getSpecificationsSpecificationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getTypeAlternatives_0()); }
		(rule__Specification__TypeAlternatives_0)
		{ after(grammarAccess.getSpecificationAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayoutSpec__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutSpecAccess().getRefLayoutCrossReference_0_0()); }
		(
			{ before(grammarAccess.getLayoutSpecAccess().getRefLayoutIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLayoutSpecAccess().getRefLayoutIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getLayoutSpecAccess().getRefLayoutCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalSpec__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerticalSpecAccess().getRefVerticalCrossReference_0_0()); }
		(
			{ before(grammarAccess.getVerticalSpecAccess().getRefVerticalIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVerticalSpecAccess().getRefVerticalIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getVerticalSpecAccess().getRefVerticalCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSpec__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHorizontalSpecAccess().getRefHorizontalCrossReference_0_0()); }
		(
			{ before(grammarAccess.getHorizontalSpecAccess().getRefHorizontalIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getHorizontalSpecAccess().getRefHorizontalIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getHorizontalSpecAccess().getRefHorizontalCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelSpec__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelSpecAccess().getRefLabelCrossReference_0_0()); }
		(
			{ before(grammarAccess.getLabelSpecAccess().getRefLabelIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLabelSpecAccess().getRefLabelIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getLabelSpecAccess().getRefLabelCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonSpecAccess().getRefButtonCrossReference_0_0()); }
		(
			{ before(grammarAccess.getButtonSpecAccess().getRefButtonIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getButtonSpecAccess().getRefButtonIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getButtonSpecAccess().getRefButtonCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonSpec__OptionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonSpecAccess().getOptionsButtonSpecOptionsParserRuleCall_3_0()); }
		ruleButtonSpecOptions
		{ after(grammarAccess.getButtonSpecAccess().getOptionsButtonSpecOptionsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputSpecAccess().getRefInputCrossReference_0_0()); }
		(
			{ before(grammarAccess.getInputSpecAccess().getRefInputIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInputSpecAccess().getRefInputIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getInputSpecAccess().getRefInputCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSpec__OptionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputSpecAccess().getOptionsInputSpecOptionsParserRuleCall_3_0()); }
		ruleInputSpecOptions
		{ after(grammarAccess.getInputSpecAccess().getOptionsInputSpecOptionsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxSpec__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxSpecAccess().getRefCheckboxCrossReference_0_0()); }
		(
			{ before(grammarAccess.getCheckboxSpecAccess().getRefCheckboxIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCheckboxSpecAccess().getRefCheckboxIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getCheckboxSpecAccess().getRefCheckboxCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextValidate__ValidationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextValidateAccess().getValidationAlternatives_1_0()); }
		(rule__TextValidate__ValidationAlternatives_1_0)
		{ after(grammarAccess.getTextValidateAccess().getValidationAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegexValidate__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegexValidateAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRegexValidateAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegexVariableRef__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegexVariableRefAccess().getRefRegexVariableValidateCrossReference_0()); }
		(
			{ before(grammarAccess.getRegexVariableRefAccess().getRefRegexVariableValidateIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRegexVariableRefAccess().getRefRegexVariableValidateIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getRegexVariableRefAccess().getRefRegexVariableValidateCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PresetTextValidate__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPresetTextValidateAccess().getValueValPasswordKeyword_0_0()); }
		(
			{ before(grammarAccess.getPresetTextValidateAccess().getValueValPasswordKeyword_0_0()); }
			'val-password'
			{ after(grammarAccess.getPresetTextValidateAccess().getValueValPasswordKeyword_0_0()); }
		)
		{ after(grammarAccess.getPresetTextValidateAccess().getValueValPasswordKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PresetTextValidate__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPresetTextValidateAccess().getValueValEmailKeyword_1_0()); }
		(
			{ before(grammarAccess.getPresetTextValidateAccess().getValueValEmailKeyword_1_0()); }
			'val-email'
			{ after(grammarAccess.getPresetTextValidateAccess().getValueValEmailKeyword_1_0()); }
		)
		{ after(grammarAccess.getPresetTextValidateAccess().getValueValEmailKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxValidate__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxValidateAccess().getValueAlternatives_0()); }
		(rule__CheckboxValidate__ValueAlternatives_0)
		{ after(grammarAccess.getCheckboxValidateAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireElements__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireElementsAccess().getElementsRequireParserRuleCall_1_0()); }
		ruleRequire
		{ after(grammarAccess.getRequireElementsAccess().getElementsRequireParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireOr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireOrAccess().getRightRequireAndParserRuleCall_1_2_0()); }
		ruleRequireAnd
		{ after(grammarAccess.getRequireOrAccess().getRightRequireAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireAnd__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAndAccess().getRightRequireBaseParserRuleCall_1_2_0()); }
		ruleRequireBase
		{ after(grammarAccess.getRequireAndAccess().getRightRequireBaseParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__ExpAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireBaseAccess().getExpRequireParserRuleCall_0_1_0()); }
		ruleRequire
		{ after(grammarAccess.getRequireBaseAccess().getExpRequireParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__ExpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireBaseAccess().getExpRequireBaseParserRuleCall_1_2_0()); }
		ruleRequireBase
		{ after(grammarAccess.getRequireBaseAccess().getExpRequireBaseParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireBase__RefAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireBaseAccess().getRefElementCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getRequireBaseAccess().getRefElementIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRequireBaseAccess().getRefElementIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getRequireBaseAccess().getRefElementCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_OPEN : '{';

RULE_CLOSE : '}';

RULE_BUTTON_TYPE : ('btn'|'button');

RULE_INPUT_TYPE : ('field'|'input');

RULE_LABEL_TYPE : ('lbl'|'label');

RULE_CHECKBOX_TYPE : ('chk'|'checkbox');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
