grammar dk.sdu.mdsd.guilang.Guilang with org.eclipse.xtext.common.Terminals

generate guilang "http://www.sdu.dk/mdsd/guilang/Guilang"

// ##################################################################
// ## TOP LEVEL
// ##################################################################
GUI:
	vars+=Variable*
	main=Main
	templates+=Template*
;

Main returns Unit:
	'main' Unit
;

Unit:
	OPEN
		layout=Layout
		specifications=Specifications?
	CLOSE
;

Entity:
	Layout | Element
;

// ##################################################################
// ## Layouts
// ##################################################################

Layout:
	(
		{Vertical} ('vertical' | 'vert') | 
		{Horizontal} ('horizontal' | 'hori')
	) name=ID? OPEN entities+=Entity* CLOSE
;

// ##################################################################
// ## Elements
// ##################################################################

Element: (
		{Label} LABEL_TYPE |
		{Button} BUTTON_TYPE | 
		{Input} INPUT_TYPE | 
		{Checkbox} CHECKBOX_TYPE |
		{TemplateInstance} ref=[Template]
	) name=ID
;

// ##################################################################
// ## Specifications
// ##################################################################

Specifications:
	{Specifications} 'elements' OPEN
		specifications+=Specification*
	CLOSE
;

Specification:
	ref=[Element] OPEN options+=Option* CLOSE
;

Option:
	{DimOption} ('dim' | 'dimensions') (width=INT'x'height=INT | ('w'| 'width') width=INT  ('h'| 'height') height=INT) |
	{SizeOption} 'size' STRING |
	{TextColor} 'text-color' (STRING | var=[ColorVariable]) |
    {BackgroundColor} 'bg-color' (STRING | var=[ColorVariable]) |
    {TextValue} 'text' STRING |
    {TextValidate} 'validate' (value=RegexValidate | var=[RegexVariable] | preset=PresetTextValidate) |
    {CheckboxValidate} ('is-checked' | 'is-unchecked') |
    {RequireElements} 'require' req=Require
;

Variable:
	'var' (
        {ColorVariable} 'color' '=' STRING |
        {RegexVariable} 'regex' '=' STRING
    )
;

RegexValidate:
	 'regex' '=' STRING
;

PresetTextValidate:
	value='val-password' | 
	value='val-email'
	// etc...
;

// ####################################
// ## Requires
// ####################################

Require:
	RequireOr
;

RequireOr returns Require:
	RequireAnd ({Or.left=current} ('||') right=RequireAnd)*
;

RequireAnd returns Require:
	RequireBase ({And.left=current} ('&&') right=RequireBase)*
;

RequireBase returns Require:
	'(' exp=Require ')' | 
	{Not} ('!' | 'NOT') exp=RequireBase | 
	{ElementRef} ref=[Element]
;

/*
RequireEquality returns Require:
	
;

RequireComparison returns Require:
	
;*/

// ##################################################################
// ## Templates
// ##################################################################

Template:
	unit=Unit
;

// ##################################################################
// ## Terminals
// ##################################################################

terminal OPEN:
	'{'
;

terminal CLOSE:
	'}'
;

terminal BUTTON_TYPE:
	'btn' | 'button'
;

terminal INPUT_TYPE:
	'field' | 'input'
;


terminal LABEL_TYPE:
	'lbl' | 'label'
;


terminal CHECKBOX_TYPE:
	'chk' | 'checkbox'
;
