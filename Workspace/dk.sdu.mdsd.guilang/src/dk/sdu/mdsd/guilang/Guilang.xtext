grammar dk.sdu.mdsd.guilang.Guilang with org.eclipse.xtext.common.Terminals

generate guilang "http://www.sdu.dk/mdsd/guilang/Guilang"

GUI:
	vars+=Variable*
	main=Main
	templates+=Template*
;

Main returns Unit:
	'main' Unit
;

Unit:
	OPEN
		layout=Layout
		specifications=Specifications?
	CLOSE
;

Template:
	'template' name=ID unit=Unit
;

Entity:
	Layout | Element
;

Layout:
	(
		{Vertical} ('vertical' | 'vert') | 
		{Horizontal} ('horizontal' | 'hori')
	) name=ID? OPEN entities+=Entity* CLOSE
;

Element: (
		{Label} ('lbl' | 'label') |
		{Button} ('btn' | 'button') | 
		{Input} ('field' | 'input') | 
		{Checkbox} ('chk' | 'checkbox') |
		{TextArea} ('text-area') |
		{TemplateInstance} 'new' ref=[Template] |
		{List} 'list' ref=[Template]
	) name=ID ('[' inlineOptions+=Option (';' inlineOptions+=Option)* ']')?
;

Specifications:
	{Specifications} 'elements' OPEN
		specifications+=Specification*
	CLOSE
;

Specification:
	ref=[Element] OPEN options+=Option* CLOSE
;

Option:
	{DimOption} ('dim' | 'dimensions') (width=INT'x'height=INT | ('w'| 'width') width=INT  ('h'| 'height') height=INT) |
	{SizeOption} 'size' value=STRING |
    {BackgroundColor} 'bg-color' (color=STRING | var=[ColorVariable]) |
	{TextColor} 'color' (color=STRING | var=[ColorVariable]) |
	{TextSize} 'text-size' value=INT unit=('px' | '%') |
    {TextValue} 'text' STRING |
    {TextValidate} 'validate' (value=RegexValidate | var=[RegexVariable] | preset=PresetTextValidate) |
    {CheckboxValidate} (value='is-checked' | value='is-unchecked') |
    {RequireElements} 'require' req=Require
;

Variable:
	{ColorVariable} 'color' name=ID '=' value=STRING |
    {RegexVariable} 'regex' name=ID '=' value=STRING
;

RegexValidate:
	 'regex' '=' STRING
;

enum PresetTextValidate:
	password |
	email |
	not_empty
	// etc...
;

Require:
	RequireOr
;

RequireOr returns Require:
	RequireAnd ({Or.left=current} ('||') right=RequireAnd)*
;

RequireAnd returns Require:
	RequireBase ({And.left=current} ('&&') right=RequireBase)*
;

RequireBase returns Require:
	'(' exp=Require ')' | 
	{Not} ('!' | 'NOT') exp=RequireBase | 
	{ElementRef} ref=[Element]
;

/*
RequireEquality returns Require:
	
;

RequireComparison returns Require:
	
;*/


// ##################################################################
// ## Terminals
// ##################################################################

terminal OPEN:
	'{'
;

terminal CLOSE:
	'}'
;
