/*
 * generated by Xtext 2.16.0
 */
package dk.sdu.mdsd.guilang.validation

import dk.sdu.mdsd.guilang.guilang.Entity
import dk.sdu.mdsd.guilang.guilang.GuilangPackage
import dk.sdu.mdsd.guilang.guilang.Template
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class GuilangValidator extends AbstractGuilangValidator {
	
	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					GuilangPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
	
	@Check
	def checkTemplateNamesStartWithCapital(Template template) {
		if(!Character.isUpperCase(template.name.charAt(0))) {
			warning("Template names should start with a capital letter", GuilangPackage.Literals.TEMPLATE__NAME, INVALID_NAME)
		}
	}
	
	@Check
	def checkEntityNamesStartWithLowerCase(Entity entity) {
		if(entity.name !== null && Character.isUpperCase(entity.name.charAt(0))) {
			warning("Entity names should start with a lowercase letter", GuilangPackage.Literals.ENTITY__NAME, INVALID_NAME)
		}
	}
}
