GUI ::= Main Template*
Main ::= 'main' Unit
Unit ::= OPEN Layout Specifications? CLOSE
Entity ::= Layout | Element | [Template]

Template ::= 'template' ID OPEN Unit CLOSE

Layout ::= (('vertical' | 'vert') | ('horizontal' | 'hori')) ID? OPEN Entity* CLOSE

Element ::= (
        ('lbl' | 'label') | 
        ('btn' | 'button') | 
        ('fld' | 'field') | 
        ('chk' | 'checkbox') | 
        ('text-area') | 
        ('list') [Entity] | 
    ) ID

Specifications ::= 'elements' OPEN Specification* CLOSE
Specification ::= [Entity] OPEN Option* CLOSE

Option ::= 
    {DimOption} ('dim' | 'dimensions') (INT'x'INT | ('w'| 'width') INT  ('h'| 'height') INT) Z |
    {SizeOption} 'size' ('x-small' | 'small' | 'medium' | 'large' | 'x-large') |
    {TextColor} 'text-color' (HEX | [ColorVariable]) |
    {BackgroundColor} 'bg-color' (HEX | [ColorVariable]) |
    {TextValue} text STRING |
    {TextValidate} (RegexValidate | RegexRef | PresetTextValidate) |
    {CheckboxValidate} ('is-checked' | 'is-unchecked') |
    {RequireElements} 'require' Require
    
Variable ::= 'var' (
        {ColorVariable} 'color' '=' STRING |
        {RegexVariable} 'regex' '=' STRING
    )

RegexValidate ::= 'regex' '=' STRING
RegexRef ::= [RegexVariable]
PresetTextValidate ::= 'val-password' | 'val-email' | 'val-not-empty' | etc...


RequireElements ::= 'require' Require
Require ::= RequrieOr
RequireOr ::= RequireAnd ('||' RequireAnd)*
RequireAnd ::= RequireBase ('&&' RequireBase)*
RequireBase ::= '(' Require ')' | ('!' | 'NOT') RequireBase | [Element]


OPEN ::= '{' // Will investiage whitespace
CLOSE ::= '}'
